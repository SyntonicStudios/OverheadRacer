<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables Shared By All Cars
accelerationRate = .06;
decelerationRate = .04;
frictionRate = .01;
maximumSpeed = 10;
rotationSpeed = 4;
brakingMultiplier = 2.8;
brakesApplied = false;
tractionMultiplier = 0.02;
steeringDirection = 0;
isOnGrass = false;

// Initialize direction
direction = image_angle;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Step Event for All Cars

// Handle Steering
if (steeringDirection = -1) {
    if (speed &gt; 3)
        image_angle += rotationSpeed;
    else
        image_angle += (speed / 10 * 3) * rotationSpeed;
}
if (steeringDirection = 1) {
    if (speed &gt; 3)
        image_angle -= rotationSpeed;    
    else
        image_angle -= (speed / 10 * 3) * rotationSpeed;   
}
steeringDirection = 0;

// Handle Traction
var angleDiff = angle_difference(image_angle, direction);
direction += angleDiff * tractionMultiplier;

// Handle friction
var frictionRateToUse = frictionRate;
if (isOnGrass) { frictionRateToUse *= 10; }
if (brakesApplied)
    frictionRateToUse *= brakingMultiplier;
hspeed *= (1 - frictionRateToUse);
vspeed *= (1 - frictionRateToUse);

// Reset variables if needed
isOnGrass = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="pntObj_grass">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Slow the car down when it is on grass!
// frictionRate *= 10;
isOnGrass = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
